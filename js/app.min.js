/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\r\n// start best block\r\ntry{\r\n    const bestTitleItem = document.getElementsByClassName('h1__title__best');\r\n    const bestContentItems = document.getElementsByClassName('best_content')\r\n    let timerId = setInterval(() => stepRight(), 3000);\r\n\r\n    const idForItems = () => {\r\n        for (let i = 0; i < bestTitleItem.length; i++){\r\n            bestTitleItem[i].id = 'titleId' + i;\r\n            bestTitleItem[i].classList.remove('active_title');\r\n            bestTitleItem[0].classList.add('active_title')\r\n            document.getElementById(`titleId${i}`).addEventListener('click', active)\r\n        }\r\n        for (let i = 0; i < bestContentItems.length; i++){\r\n            bestContentItems[i].id = 'contentId' + i;\r\n            bestContentItems[i].classList.add('invisible');\r\n            bestContentItems[0].classList.remove('invisible');\r\n        }\r\n    }\r\n    const active= (e) => {\r\n        clearInterval(timerId);\r\n        const activeItem = e.target.id;\r\n        for (let i = 0; i < bestTitleItem.length; i++) {\r\n            bestTitleItem[i].classList.remove('active_title');\r\n        }\r\n        document.getElementById(activeItem).classList.add('active_title');\r\n        let act = Number(e.target.id.slice(-1));\r\n        for (let i = 0; i < bestContentItems.length; i++){\r\n            bestContentItems[i].id = 'contentId' + i;\r\n            bestContentItems[i].classList.add('invisible');\r\n            bestContentItems[act].classList.remove('invisible');\r\n        }\r\n    }\r\n    const isActive = () => {\r\n        for(let i = 0; i < bestTitleItem.length; i++){\r\n            if(bestTitleItem[i].classList.contains('active_title')){\r\n                return Number(bestTitleItem[i].id.slice(-1))\r\n            }\r\n        }\r\n    }\r\n    const stepRight = () =>{\r\n        let next;\r\n        if(+isActive() === (bestTitleItem.length-1)){\r\n            next = 0;\r\n        }\r\n        else next = +isActive() +1;\r\n        for (let i = 0; i < bestTitleItem.length; i++){\r\n            bestTitleItem[i].classList.remove('active_title');\r\n            bestTitleItem[next].classList.add('active_title')\r\n        }\r\n        for (let i = 0; i < bestContentItems.length; i++){\r\n            bestContentItems[i].classList.add('invisible');\r\n            bestContentItems[next].classList.remove('invisible');\r\n        }\r\n\r\n    }\r\n    idForItems();\r\n\r\n}\r\ncatch (e) {\r\n    console.log(e)\r\n}\r\n// end best block\r\n\r\n//btn-up block start\r\ntry{\r\n    const btnUp = document.getElementById('button-up');\r\n    const scrollUp = () => {\r\n        if (document.documentElement.scrollTop > 300) {\r\n            btnUp.classList.remove('show');\r\n        } else {\r\n            btnUp.classList.add('show')\r\n        }\r\n    }\r\n\r\n    const scrollingUp = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: 'smooth'\r\n        });\r\n    }\r\n\r\n    btnUp.addEventListener('click', scrollingUp );\r\n    window.addEventListener('scroll', scrollUp);\r\n}\r\ncatch (e){\r\n    console.log(e)\r\n}\r\n//btn-up block end\r\n\r\n//modal block start\r\ntry {\r\n    const btnOpenModal = document.getElementById('openModal');\r\n    const btnClosedModal = document.getElementById('close_icon');\r\n    const btnsubmit = document.getElementById('closedModal');\r\n    const modal = document.getElementById('modal');\r\n    const userNameInput = document.getElementById('userNameInput');\r\n    const userPhoneInput = document.getElementById('userPhoneInput');\r\n\r\n    const open = function (){\r\n        modal.classList.add('modal-active');\r\n        document.body.classList.add('main_hidden');\r\n    }\r\n\r\n    const closed = function (event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        // sendToTelegram(userNameInput.value, userPhoneInput.value);\r\n        userNameInput.value = \"\";\r\n        userPhoneInput.value = \"\";\r\n        modal.classList.remove('modal-active');\r\n        document.body.classList.remove('main_hidden');\r\n    }\r\n    const exit = function (event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        userNameInput.value = \"\";\r\n        userPhoneInput.value = \"\";\r\n        modal.classList.remove('modal-active');\r\n        document.body.classList.remove('main_hidden');\r\n    }\r\n    try{\r\n        const openModalMob = document.getElementById('openModalMob');\r\n        openModalMob.addEventListener('click', open);\r\n    }\r\n    catch (e)\r\n    {\r\n        console.log(e)\r\n    }\r\n    btnOpenModal.addEventListener('click', open);\r\n    btnClosedModal.addEventListener('click', exit);\r\n    btnsubmit.addEventListener('click', closed);\r\n    userPhoneInput.addEventListener('focus', _ => {\r\n        if(!/^\\+\\d*$/.test(userPhoneInput.value))\r\n            userPhoneInput.value = '+38';\r\n\r\n    });\r\n\r\n    userPhoneInput.addEventListener('keypress', e => {\r\n        if(!/\\d/.test(e.key)) {\r\n            e.preventDefault();\r\n        }\r\n    });\r\n\r\n\r\n}\r\ncatch (e){\r\n    console.log(e)\r\n}\r\n//modal block end\r\n\r\n//burger menu block start\r\ntry{\r\n    const burgerMenuOpenBTN = document.getElementById('burger-menu-open');\r\n    const burgerMenu = document.getElementById('burger-menu');\r\n    const burgerMenuCloseBTN = document.getElementById('burger-menu-close');\r\n    const burgerMenuStickOpen = document.getElementById('open-burger-stick-menu');\r\n\r\n\r\n    const openBurger = () => {\r\n        burgerMenu.classList.add('_active-burger-menu')\r\n    }\r\n    const closeBurger = () => {\r\n        burgerMenu.classList.remove('_active-burger-menu')\r\n    }\r\n    window.addEventListener('scroll', closeBurger)\r\n    burgerMenuOpenBTN.addEventListener('click', openBurger);\r\n    burgerMenuCloseBTN.addEventListener('click', closeBurger);\r\n    burgerMenuStickOpen.addEventListener('click', openBurger);\r\n}\r\ncatch (e){\r\n    console.log(e)\r\n}\r\n//burger menu block end\r\n\r\n//stick_menu block start\r\ntry{\r\n    const stickMenu = document.getElementById('stick_menu');\r\n    const header = document.getElementById('header');\r\n\r\n    const scrollMenu = () => {\r\n        stickMenu.style.width = `${header.offsetWidth}px`;\r\n        if (document.documentElement.scrollTop > header.offsetHeight) {\r\n            stickMenu.classList.add('_active-menu');\r\n        }\r\n        else {\r\n            stickMenu.classList.remove('_active-menu');\r\n        }\r\n    }\r\n    window.addEventListener('scroll', scrollMenu)\r\n}\r\ncatch (e){\r\n    console.log(e)\r\n}\r\n//stick_menu block end\r\n\n\n//# sourceURL=webpack://windows/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;